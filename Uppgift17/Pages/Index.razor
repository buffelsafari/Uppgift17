@page "/"
@using ViewEntity
@using Models
@inject HttpClient Http

<CascadingValue Value="@baseEntity.GetDrawOperations()">

    <MapView />
    
</CascadingValue>

@code
{


    protected Entity baseEntity;


    protected async override Task OnInitializedAsync()
    {



        baseEntity = new Entity(45);

        baseEntity.AddOperation(new DrawOperation { Operation = "clear", Data = null });
        baseEntity.AddOperation(new DrawOperation { Operation = "beginPath", Data = null });
        baseEntity.AddOperation(new DrawOperation { Operation = "moveTo", Data = new int[] { 0, 0 } });
        baseEntity.AddOperation(new DrawOperation { Operation = "lineTo", Data = new int[] { 100, 100 } });
        baseEntity.AddOperation(new DrawOperation { Operation = "lineTo", Data = new int[] { 500, 100 } });
        baseEntity.AddOperation(new DrawOperation { Operation = "lineTo", Data = new int[] { 700, 600 } });
        baseEntity.AddOperation(new DrawOperation { Operation = "arcCW", Data = new int[] { 600, 600, 100, 0, 180 } });
        baseEntity.AddOperation(new DrawOperation { Operation = "arcCCW", Data = new int[] { 400, 600, 100, 0, 180 } });
        baseEntity.AddOperation(new DrawOperation { Operation = "testClick", TargetId = Guid.NewGuid().ToString("n"), Data = null });
        baseEntity.AddOperation(new DrawOperation { Operation = "strokeRGBA", Data = new int[] { 255, 255, 0, 128 } });
        baseEntity.AddOperation(new DrawOperation { Operation = "lineWidth", Data = new int[] { 10 } });
        baseEntity.AddOperation(new DrawOperation { Operation = "stroke", Data = null });


        Entity child = new Entity(0);
        //child.AddOperation(new DrawOperation { Operation = "clear", Data = null });
        child.AddOperation(new DrawOperation { Operation = "beginPath", Data = null });
        child.AddOperation(new DrawOperation { Operation = "moveTo", Data = new int[] { 500, 500 } });
        child.AddOperation(new DrawOperation { Operation = "lineTo", Data = new int[] { 600, 500 } });
        child.AddOperation(new DrawOperation { Operation = "lineTo", Data = new int[] { 600, 600 } });
        child.AddOperation(new DrawOperation { Operation = "lineTo", Data = new int[] { 500, 600 } });

        child.AddOperation(new DrawOperation { Operation = "testClick", TargetId = Guid.NewGuid().ToString("n"), Data = null });
        child.AddOperation(new DrawOperation { Operation = "closePath", Data = null });
        child.AddOperation(new DrawOperation { Operation = "strokeRGBA", Data = new int[] { 255, 255, 0, 128 } });
        child.AddOperation(new DrawOperation { Operation = "lineWidth", Data = new int[] { 10 } });
        child.AddOperation(new DrawOperation { Operation = "stroke", Data = null });
        baseEntity.AddChild(child);


        base.OnInitialized();
    }


    protected async override Task OnParametersSetAsync()
    {
        baseEntity.AddChild(await ServerLoader.Load(Http));


        base.OnParametersSet();
    }

}