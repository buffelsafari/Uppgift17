@page "/"
@using ViewEntity
@using Models
@inject HttpClient Http
@inject IEntityResourceManager entityResourceManager

<div style="user-select: none;" @onclick=OnScreenClick>
<CascadingValue Value=DrawOps>

    <MapView OnOpenContextMenu=OnOpenContextMenu OnStopTranslateEntity=OnStopTranslateEntity OnTranslateEntity=OnTranslateEntity />

</CascadingValue>



<button @onclick="OnClick" style="position:absolute; top:50px; left:200px;">click me to update!</button>

<button @onmousedown="OnAddDown" style="position:absolute; top:50px; right:200px;">add</button>

<CascadingValue Value=ContextMenuArgs>
    <ContextMenu OnNew=OnNew OnDelete=OnDelete/>
</CascadingValue>

</div>

@code
{
    [CascadingParameter]
    public ContextMenuArgs ContextMenuArgs { get; set; }

    [CascadingParameter]
    public Task<IEnumerable<DrawOperation>> DrawOps { get; set; }

    //protected Entity baseEntity;

    protected EntityHandler entityHandler;




    void OnTranslateEntity(string id, double x, double y)
    {
        entityHandler.TranslateEntity(id, x, y);

        Console.WriteLine("xxx Hello from on translate entity xxx id:"+id);
        Console.WriteLine("X=" + x + "   Y=" + y);

        DrawOps = entityHandler.GetDrawOperations();
        StateHasChanged();
    }

    void OnStopTranslateEntity()
    {
        entityHandler.StopTranslatingEntity();

        //DrawOps = baseEntity.GetDrawOperations();
        //StateHasChanged();
    }

    void OnNew()
    {
        // todo add to right parent with parent coordinates
        Entity machine5 = new Entity(entityResourceManager, "star_machine", 0, 0, 0);
        entityHandler.AddChild(machine5);
        DrawOps = entityHandler.GetDrawOperations();
        StateHasChanged();
        

        Console.WriteLine("hello from new");
    }

    void OnDelete()
    {
        Console.WriteLine("Hello from Delete");
    }

    void OnOpenContextMenu(string id, double x, double y)
    {


        Console.WriteLine("opening context menu id"+id);
        ContextMenuArgs.TargetId = id;
        ContextMenuArgs.X = (int)x;
        ContextMenuArgs.Y = (int)y;
        ContextMenuArgs.IsOpen = true;
        StateHasChanged();

    }


    protected async override Task OnInitializedAsync()
    {
        entityHandler = new EntityHandler(entityResourceManager);

        ContextMenuArgs = new ContextMenuArgs
        {
            TargetId = "",
            X = 0,
            Y = 0,
            IsOpen = false
        };



        DrawOps = entityHandler.GetDrawOperations();

        base.OnInitialized();
    }


    protected async override Task OnParametersSetAsync()
    {


        base.OnParametersSet();
    }

    private void OnClick()
    {
        DrawOps = entityHandler.GetDrawOperations();

        Console.WriteLine("hello from click");
        StateHasChanged();
    }

    private void OnAddDown()
    {
        Entity machine5 = new Entity(entityResourceManager, "star_machine", 0, 0, 0);
        entityHandler.AddChild(machine5);
        DrawOps = entityHandler.GetDrawOperations();
        StateHasChanged();
        Console.WriteLine("hello on adder");
    }

    private void OnScreenClick(MouseEventArgs args)
    {
        Console.WriteLine("clicked on screen");
        ContextMenuArgs.IsOpen = false;
        StateHasChanged();
    }

}